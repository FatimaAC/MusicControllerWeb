@model MusicController.DTO.ViewModel.UserViewModel

@{
    ViewData["Title"] = "Edit";
}
<div class="row card-body">
    <div class="col-sm-3">
    </div>
    <div class="col-sm-6 border p-5 white-color">
        <h4 class="text-center">Edit User Management</h4>
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" type="hidden" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" disabled class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Role" class="control-label"></label>
                <select asp-for="Role" asp-items="@ViewBag.Roles" class="form-control">
                    <option selected disabled>Please select Role</option>
                </select>
                <span asp-validation-for="Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label  class="control-label"></label>
                <label asp-for="IsAuthorized">
                    <input asp-for="IsAuthorized" class="form-check-inline">@Html.DisplayNameFor(e=>e.IsAuthorized)
                </label>
                <span asp-validation-for="IsAuthorized" class="text-danger"></span>
            </div>
          
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
        <br />
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>

</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
