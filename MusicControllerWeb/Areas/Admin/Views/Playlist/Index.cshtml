@model PlaylistViewModel

@{
    ViewData["Title"] = "Index";
    ViewBag.Show = true;
}
<div class="container mt-3">
    <h2>Playlist</h2>
    <div class="d-flex">
        <div class="p-2 flex-grow-1 mr-1">
            <div class="input-group">
            </div>
        </div>
        <div class="p-2">
            <a asp-action="Create" asp-controller="Playlist" asp-route-id="@ViewBag.OutletId" class="btn btn-primary float-right ">+ Add Playlist</a>
        </div>
    </div>
    <br>
    <div class="list-group" id="myList">
        @if (!Model.Playlists.Any())
        {
            <a href="#" class="list-group-item text-body text-decoration-none">
                <p> No Playlist Found</p>
            </a>
        }
        else
        {
            @foreach (var playlist in Model.Playlists)
            {
                <a href="#" class="list-group-item text-body text-decoration-none">
                    <div class="row">
                        <div class="col-sm-2">
                            <h4>@playlist.Name</h4>
                        </div>
                        <div class="col-sm-7 align-content-center h-100">
                            @if (playlist.Tracks?.Any() == true)
                            {
                                var count = 1;
                                @foreach (var item in playlist.Tracks)
                                {
                                    <small>Track @count - @item.FormatedStartTime to @item.FormatedEndTime</small><br />
                                    count = count + 1;
                                }
                            }
                            <small class="text-success">
                                @if (string.IsNullOrEmpty(@playlist.Frequency))
                                {
                                    @playlist.Schedule
                                }
                                else
                                {
                                    @playlist.Frequency
                                }
                            </small>
                        </div>
                        <div class="col-sm-3 align-content-end">
                            <div class="form-inline">

                                <button class="btn btn-primary btn-sm m-1" onclick="location.href='@Url.Action("Edit", "Playlist", new { id = playlist.Id })'"> Edit </button>
                                <form asp-action="Delete" asp-controller="playlist" asp-route-id="@playlist.Id">
                                    <input type="hidden" name="OutletId" value="@ViewBag.OutletId" />
                                    <button type="submit" class="btn btn-danger btn-sm">Remove</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </a>
            }
        }
    </div>
    @*    schudle list  *@
    @if (Model.Playlists.Any())
    {
        @await Component.InvokeAsync("WeeklyScheduleList", new { outletId = Model.Playlists.FirstOrDefault().OutletId })
    }
</div>

